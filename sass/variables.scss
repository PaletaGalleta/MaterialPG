@import "../text";

$materialSymbols: "Material Symbols Rounded";

$BreakXXL: 1400px;
$BreakXL: 1200px;
$BreakLG: 992px;
$BreakMD: 768px;
$BreakSM: 576px;
$BreakXS: 0;

$mediaXL: "only screen and (max-width: #{$BreakXL})";
$mediaLG: "only screen and (max-width: #{$BreakLG})";
$mediaMD: "only screen and (max-width: #{$BreakMD})";
$mediaSM: "only screen and (max-width: #{$BreakSM})";
$mediaXS: "only screen and (max-width: #{$BreakXS})";

$grid-breakpoints: (
    xs: $BreakXS,
    sm: $BreakSM,
    md: $BreakMD,
    lg: $BreakLG,
    xl: $BreakXL,
    xxl: $BreakXXL,
);

$container-sizes: (
    xs: 0,
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1320px,
);

$display-types: (block, inline, inline-block, flex, none, table-cell);

$pos-types: (relative, fixed, absolute, static, sticky);

$pos-places: (top, left, right, bottom);

$pos-values: (0, 25%, 50%, 75%, 100%);

$column-counts: (
    xs: 4,
    sm: 4,
    md: 12,
    lg: 12,
    xl: 12,
);

$column-count: 12;

$pixel-diff: (
    0: 0,
    1: 4px,
    2: 8px,
    3: 12px,
    4: 16px,
);

$percentage-types: (
    0: 0,
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
);

/* Colors */
$colorPrimary: var(--md-sys-color-primary);
$colorOnPrimary: var(--md-sys-color-on-primary);
$colorPrimaryContainer: var(--md-sys-color-primary-container);
$colorOnPrimaryContainer: var(--md-sys-color-on-primary-container);
$colorOnSecondary: var(--md-sys-color-on-secondary);
$colorSecondary: var(--md-sys-color-secondary);
$colorSecondaryContainer: var(--md-sys-color-secondary-container);
$colorOnSecondaryContainer: var(--md-sys-color-on-secondary-container);
$colorTertiary: var(--md-sys-color-tertiary);
$colorOnTertiary: var(--md-sys-color-on-tertiary);
$colorTertiaryContainer: var(--md-sys-color-tertiary-container);
$colorOnTertiaryContainer: var(--md-sys-color-on-tertiary-container);
$colorError: var(--md-sys-color-error);
$colorErrorContainer: var(--md-sys-color-error-container);
$colorOnError: var(--md-sys-color-on-error);
$colorOnErrorContainer: var(--md-sys-color-on-error-container);
$colorBackground: var(--md-sys-color-background);
$colorOnBackground: var(--md-sys-color-on-background);
$colorSurface: var(--md-sys-color-surface);
$colorOnSurface: var(--md-sys-color-on-surface);
$colorSurfaceVariant: var(--md-sys-color-surface-variant);
$colorOnSurfaceVariant: var(--md-sys-color-on-surface-variant);
$colorOutline: var(--md-sys-color-outline);
$colorInverseOnSurface: var(--md-sys-color-inverse-on-surface);
$colorInverseSurface: var(--md-sys-color-inverse-surface);
$colorInversePrimary: var(--md-sys-color-inverse-primary);
$colorShadow: var(--md-sys-color-shadow);
$colorSurfaceTint: var(--md-sys-color-surface-tint);
$colorSurfaceTintColor: var(--md-sys-color-surface-tint-color);

$colorSurface: var(--md-sys-color-surface);
$colorSurfaceDim: var(--md-sys-color-surface-dim);
$colorSurfaceBright: var(--md-sys-color-surface-bright);
$colorSurfaceContainerLowest: var(--md-sys-color-surface-container-lowest);
$colorSurfaceContainerLow: var(--md-sys-color-surface-container-low);
$colorSurfaceContainer: var(--md-sys-color-surface-container);
$colorSurfaceContainerHigh: var(--md-sys-color-surface-container-high);
$colorSurfaceContainerHighest: var(--md-sys-color-surface-container-highest);

$colorGreen: var(--md-custom-color-green);
$colorOnGreen: var(--md-custom-color-on-green);
$colorGreenContainer: var(--md-custom-color-green-container);
$colorOnGreenContainer: var(--md-custom-color-on-green-container);
$colorYellow: var(--md-custom-color-yellow);
$colorOnYellow: var(--md-custom-color-on-yellow);
$colorYellowContainer: var(--md-custom-color-yellow-container);
$colorOnYellowContainer: var(--md-custom-color-on-yellow-container);

$colorScrim: var(--md-ref-palette-neutral-variant20);

$filterOnPrimaryContainer: var(--md-sys-filter-on-primary-container);

/* Corners */
$cornerNone: 0px;
$cornerExtraSmall: 4px;
$cornerExtraSmallTop: 4px 4px 0 0;
$cornerSmall: 8px;
$cornerMedium: 12px;
$cornerLarge: 16px;
$cornerLargeEnd: 0 16px 16px 0;
$cornerLargeTop: 16px 16px 0 0;
$cornerExtraLarge: 28px;
$cornerExtraLargeTop: 28px 28px 0 0;

$corners: (
    xs: $cornerExtraSmall,
    xs-top: $cornerExtraSmallTop,
    sm: $cornerSmall,
    md: $cornerMedium,
    lg: $cornerLarge,
    lg-end: $cornerLargeEnd,
    lg-top: $cornerLargeTop,
    xl: $cornerExtraLarge,
    xl-top: $cornerExtraLargeTop,
);

/* Opacidades (State Layer) */
$stateHover: 0.08;
$stateFocus: 0.12;
$statePressed: 0.12;
$stateDragged: 0.16;
$stateDisabledContent: 0.38;
$stateDisabledContainer: 0.12;

/* Transiciones - Tiempos*/
$durationShort1: 0.05s;
$durationShort2: 0.1s;
$durationShort3: 0.15s;
$durationShort4: 0.2s;
$durationMedium1: 0.25s;
$durationMedium2: 0.3s;
$durationMedium3: 0.35s;
$durationMedium4: 0.4s;
$durationLong1: 0.45s;
$durationLong2: 0.5s;
$durationLong3: 0.55s;
$durationLong4: 0.6s;
$durationXLong1: 0.7s;
$durationXLong2: 0.8s;
$durationXLong3: 0.9s;
$durationXLong4: 1s;

/* Transiciones - Formas */
$easingEmphasized: cubic-bezier(0.2, 0, 0, 1);
$easingEmphasizedDecelerate: cubic-bezier(0.05, 0.7, 0.1, 1);
$easingEmphasizedAccelerate: cubic-bezier(0.3, 0, 0.8, 0.15);
$easingStandard: cubic-bezier(0.2, 0, 0, 1);
$easingStandardDecelerate: cubic-bezier(0, 0, 0, 1);
$easingStandardAccelerate: cubic-bezier(0.3, 0, 1, 1);

%before-show {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: " ";
    pointer-events: none;
    overflow: hidden;
    transition: opacity $durationMedium3 $easingStandardDecelerate;
}

$key-shadow-umbra-colour: rgba(black, 0.14);
$key-shadow-penumbra-colour: rgba(black, 0.12);
$ambient-shadow-colour: rgba(black, 0.2);

$key-shadow-umbra-map: (
    1: 0 0 2px 0 $key-shadow-umbra-colour,
    2: 0 0 4px 0 $key-shadow-umbra-colour,
    3: 0 1px 6px 0 $key-shadow-umbra-colour,
    4: 0 2px 4px 0 $key-shadow-umbra-colour,
    5: 0 4px 6px 0 $key-shadow-umbra-colour,
    6: 0 6px 10px 0 $key-shadow-umbra-colour,
    7: 0 6px 10px 0 $key-shadow-umbra-colour,
    8: 0 8px 10px 1px $key-shadow-umbra-colour,
    9: 0 9px 12px 2px $key-shadow-umbra-colour,
    10: 0 10px 13px 2px $key-shadow-umbra-colour,
    11: 0 11px 14px 2px $key-shadow-umbra-colour,
    12: 0 12px 16px 2px $key-shadow-umbra-colour,
    13: 0 13px 18px 2px $key-shadow-umbra-colour,
    14: 0 14px 21px 2px $key-shadow-umbra-colour,
    15: 0 15px 22px 2px $key-shadow-umbra-colour,
    16: 0 16px 23px 2px $key-shadow-umbra-colour,
    17: 0 17px 24px 2px $key-shadow-umbra-colour,
    18: 0 18px 25px 3px $key-shadow-umbra-colour,
    19: 0 19px 26px 3px $key-shadow-umbra-colour,
    20: 0 20px 28px 3px $key-shadow-umbra-colour,
    21: 0 21px 30px 3px $key-shadow-umbra-colour,
    22: 0 22px 32px 3px $key-shadow-umbra-colour,
    23: 0 23px 36px 3px $key-shadow-umbra-colour,
    24: 0 24px 38px 3px $key-shadow-umbra-colour,
);

$key-shadow-penumbra-map: (
    1: 0 2px 2px 0 $key-shadow-penumbra-colour,
    2: 0 3px 4px 0 $key-shadow-penumbra-colour,
    3: 0 3px 4px 0 $key-shadow-penumbra-colour,
    4: 0 4px 5px 0 $key-shadow-penumbra-colour,
    5: 0 4px 5px 0 $key-shadow-penumbra-colour,
    6: 0 1px 18px 0 $key-shadow-penumbra-colour,
    7: 0 2px 18px 1px $key-shadow-penumbra-colour,
    8: 0 3px 14px 2px $key-shadow-penumbra-colour,
    9: 0 3px 18px 3px $key-shadow-penumbra-colour,
    10: 0 4px 16px 3px $key-shadow-penumbra-colour,
    11: 0 4px 18px 3px $key-shadow-penumbra-colour,
    12: 0 5px 22px 4px $key-shadow-penumbra-colour,
    13: 0 5px 26px 4px $key-shadow-penumbra-colour,
    14: 0 5px 29px 4px $key-shadow-penumbra-colour,
    15: 0 6px 34px 5px $key-shadow-penumbra-colour,
    16: 0 6px 30px 5px $key-shadow-penumbra-colour,
    17: 0 6px 36px 5px $key-shadow-penumbra-colour,
    18: 0 7px 33px 6px $key-shadow-penumbra-colour,
    19: 0 7px 37px 6px $key-shadow-penumbra-colour,
    20: 0 8px 34px 6px $key-shadow-penumbra-colour,
    21: 0 8px 39px 7px $key-shadow-penumbra-colour,
    22: 0 9px 38px 7px $key-shadow-penumbra-colour,
    23: 0 9px 40px 7px $key-shadow-penumbra-colour,
    24: 0 9px 46px 8px $key-shadow-penumbra-colour,
);

$ambient-shadow-map: (
    1: 0 1px 3px 0 $ambient-shadow-colour,
    2: 0 1px 5px 0 $ambient-shadow-colour,
    3: 0 1px 7px 0 $ambient-shadow-colour,
    4: 0 1px 8px 0 $ambient-shadow-colour,
    5: 0 1px 10px 0 $ambient-shadow-colour,
    6: 0 3px 5px 0 $ambient-shadow-colour,
    7: 0 3px 8px 0 $ambient-shadow-colour,
    8: 0 4px 15px 0 $ambient-shadow-colour,
    9: 0 5px 11px 0 $ambient-shadow-colour,
    10: 0 5px 14px 0 $ambient-shadow-colour,
    11: 0 6px 10px 0 $ambient-shadow-colour,
    12: 0 6px 13px 0 $ambient-shadow-colour,
    13: 0 7px 10px 0 $ambient-shadow-colour,
    14: 0 7px 12px 0 $ambient-shadow-colour,
    15: 0 7px 14px 0 $ambient-shadow-colour,
    16: 0 8px 13px 0 $ambient-shadow-colour,
    17: 0 8px 15px 0 $ambient-shadow-colour,
    18: 0 9px 11px 0 $ambient-shadow-colour,
    19: 0 9px 13px 0 $ambient-shadow-colour,
    20: 0 9px 15px 0 $ambient-shadow-colour,
    21: 0 10px 12px 0 $ambient-shadow-colour,
    22: 0 10px 15px 0 $ambient-shadow-colour,
    23: 0 11px 13px 0 $ambient-shadow-colour,
    24: 0 11px 15px 0 $ambient-shadow-colour,
);

// If you don't want all the classes can also just include this mixin and provide an elevation value in any class
@mixin elevation($elevation) {
    box-shadow: map-get($key-shadow-umbra-map, $elevation), map-get($key-shadow-penumbra-map, $elevation),
        map-get($ambient-shadow-map, $elevation);
}

%icon {
    font-family: $materialSymbols !important;
    display: inline-block;
    vertical-align: bottom;
    font-variation-settings: "FILL" 0, "wght" 500, "opsz" 24;
    line-height: inherit;

    &.color {
        color: $colorPrimary;
    }

    &.big {
        font-variation-settings: "FILL" 0, "wght" 500, "opsz" 48 !important;

        [data-theme="dark"] & {
            font-variation-settings: "FILL" 0, "wght" 400, "opsz" 48 !important;
        }
    }

    &.filled {
        font-variation-settings: "FILL" 1, "wght" 400, "opsz" 24;

        [data-theme="dark"] & {
            font-variation-settings: "FILL" 1, "wght" 300, "opsz" 24 !important;
        }
    }

    [data-theme="dark"] & {
        font-variation-settings: "FILL" 0, "wght" 400, "opsz" 24;
    }
}
